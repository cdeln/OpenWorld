#version 430


layout(local_size_x=256) in;

layout(location = 0) uniform float dt;
layout(std430, binding=0) buffer pblock
{
    vec4 pos_array[];
};
layout(std430, binding=1) buffer vblock
{
    vec4 vel_array[];
};


void main(void)
{
    int N = int(gl_NumWorkGroups.x * gl_NumWorkGroups.x);
    int index = int(gl_GlobalInvocationID);

    vec3 pos = pos_array[index].xyz;
    vec3 vel = vel_array[index].xyz;
    vec3 acc = vec3(0,0,0);
    for(int i = 0; i < N; ++i)
    {
        vec3 other = pos_array[i].xyz;
        vec3 diff = other - pos;
        float invdist = 1.0 / ( length(diff) + 0.001 );
        acc += diff * pow(invdist,3);
    } 
    vel_array[index] = vec4(vel + dt * acc, 0);
}

